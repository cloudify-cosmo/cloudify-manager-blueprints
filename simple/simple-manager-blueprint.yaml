tosca_definitions_version: cloudify_dsl_1_0

imports:
  - http://www.getcloudify.org/spec/cloudify/3.2/types.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.2/plugin.yaml


inputs:

  public_ip:
    type: string

  private_ip:
    type: string

  ssh_user:
    type: string

  ssh_key_filename:
    type: string

  agents_user:
    default: ubuntu
    type: string

  resources_prefix:
    default: ''
    type: string


node_templates:
  manager_host:
    type: cloudify.nodes.Compute
    properties:
      install_agent: false
      ip: { get_input: public_ip }

  manager:
    type: cloudify.nodes.CloudifyManager
    properties:
      cloudify_packages:
        agents:
          ubuntu_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.2.0/ga-RELEASE/cloudify-ubuntu-agent_3.2.0-ga-b200_amd64.deb
          centos_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.2.0/ga-RELEASE/cloudify-centos-final-agent_3.2.0-ga-b200_amd64.deb
          windows_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.2.0/ga-RELEASE/cloudify-windows-agent_3.2.0-ga-b200_amd64.deb
        docker:
           docker_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.2.0/ga-RELEASE/cloudify-docker_3.2.0-ga-b200.tar

      cloudify:
        resources_prefix: { get_input: resources_prefix }

        cloudify_agent:
          min_workers: 0
          max_workers: 5
          remote_execution_port: 22
          user: { get_input: agents_user }

        workflows:
          task_retries: -1  # this means forever
          task_retry_interval: 30

        policy_engine:
          start_timeout: 30

    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: fabric.fabric_plugin.tasks.run_module_task
          inputs:
            task_mapping: cloudify_cli.bootstrap.tasks.bootstrap_docker
            task_properties:
              cloudify_packages: { get_property: [manager, cloudify_packages] }
              agent_local_key_path: { get_input: ssh_key_filename }
              manager_private_ip: { get_input: private_ip }
            fabric_env:
              user: { get_input: ssh_user }
              key_filename: { get_input: ssh_key_filename }
        stop:
          implementation: fabric.fabric_plugin.tasks.run_module_task
          inputs:
            task_mapping: cloudify_cli.bootstrap.tasks.stop_manager_container
            fabric_env:
              user: { get_input: ssh_user }
              key_filename: { get_input: ssh_key_filename }
        delete:
          implementation: fabric.fabric_plugin.tasks.run_module_task
          inputs:
            task_mapping: cloudify_cli.bootstrap.tasks.stop_docker_service
            fabric_env:
              user: { get_input: ssh_user }
              key_filename: { get_input: ssh_key_filename }
      cloudify.interfaces.validation:
        creation:
          implementation: cli.cloudify_cli.bootstrap.tasks.creation_validation
          inputs:
            cloudify_packages: { get_property: [manager, cloudify_packages] }

plugins:
  cli:
    install: false
    executor: central_deployment_agent

outputs:
  manager_ip:
    value: { get_property: [manager_host, ip] }
