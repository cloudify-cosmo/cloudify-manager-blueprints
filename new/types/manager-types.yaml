######################################################################
# By default, the types are using the Fabric plugin to create
# and start the nodes so that you can choose a machine and run this
# blueprint on it.
######################################################################

node_types:

  cloudify.nodes.MyCloudifyManager:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      ssh_user:
        default: ubuntu
      ssh_key_filename:
        default: ''
      cloudify:
        description: >
          Configuration for Cloudify Manager
        default:
          transient_deployment_workers_mode:
            enabled: false
            global_parallel_executions_limit: -1  # -1 means no limit
          resources_prefix: ''
          cloudify_agent:
            min_workers: 2
            max_workers: 5
            remote_execution_port: 22
            user: ubuntu
          workflows:
            task_retries: -1  # this means forever
            task_retry_interval: 30
          policy_engine:
            start_timeout: 30

  manager.nodes.PythonRuntime:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      pip_version:
        description: >
          The pip version to use on the host.
          Note that defaulting to an empty string means
          installing the latest version available.
        type: string
        default: ''
      virtualenv_version:
        description: >
          The virtualenv version to use on the host.
          Note that defaulting to an empty string means
          installing the latest version available.
        type: string
        default: ''
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              # Note that this also sets SELinux to Permissive
              # mode until we find a better position for it.
              default: components/python/scripts/create.sh
            fabric_env: &simple_fabric_env
              default:
                user: { get_input: ssh_user }
                key_filename: { get_input: ssh_key_filename }
                host_string: { get_input: public_ip }
                always_use_pty: true
                hide: running

  manager.nodes.JavaRuntime:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      java_rpm_source_url:
        description: Java RPM Source URL
        default: { get_input: java_source_url }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/java/scripts/create.sh
            fabric_env: *simple_fabric_env

  manager.nodes.RabbitMQ:
    derived_from: cloudify.nodes.MessageBusServer
    properties:
      erlang_rpm_source_url:
        description: Erlang RPM to install.
        type: string
        default: { get_input: erlang_source_url }
      rabbitmq_rpm_source_url:
        description: RabbitMQ RPM Source URL
        type: string
        default: { get_input: rabbitmq_source_url }
      rabbitmq_events_queue_message_ttl:
        type: integer
        default: { get_input: rabbitmq_events_queue_message_ttl }
      rabbitmq_logs_queue_message_ttl:
        type: integer
        default: { get_input: rabbitmq_logs_queue_message_ttl }
      rabbitmq_metrics_queue_message_ttl:
        type: integer
        default: { get_input: rabbitmq_metrics_queue_message_ttl }
      rabbitmq_events_queue_length_limit:
        type: integer
        default: { get_input: rabbitmq_events_queue_length_limit }
      rabbitmq_logs_queue_length_limit:
        type: integer
        default: { get_input: rabbitmq_logs_queue_length_limit }
      rabbitmq_metrics_queue_length_limit:
        type: integer
        default: { get_input: rabbitmq_metrics_queue_length_limit }
      rabbitmq_fd_limit:
        description: RabbitMQ File Descriptors Limit
        type: integer
        default: { get_input: rabbitmq_fd_limit }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/rabbitmq/scripts/create.sh
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/rabbitmq/scripts/start.sh
            fabric_env: *simple_fabric_env

  manager.nodes.Elasticsearch:
    derived_from: cloudify.nodes.DBMS
    properties:
      es_rpm_source_url:
        description: Elasticsearch tar.gz Source URL
        type: string
        default: { get_input: elasticsearch_source_url }
      es_heap_size:
        description: >
          This is crucial when scaling up as it
          allows to set the amount of memory allocated and affects
          indexing and searching performance. See
          https://www.elastic.co/guide/en/elasticsearch/guide/current/heap-sizing.html
          for more info.
        type: string
        default: { get_input: elasticsearch_heap_size }
      es_java_opts:
        description: >
          ES_JAVA_OPTS Env Var. Allows to provide arguments
          to Elasticsearch.
        type: string
        default: { get_input: elasticsearch_java_opts }
      es_index_rotation_interval:
        description: >
          Defines how many days of indices you want to keep in Elasticsearch.
          This is only relevant to the Events/Logs indices and does not
          interfere with the data model.
        type: integer
        default: { get_input: elasticsearch_index_rotation_interval }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/elasticsearch/scripts/create.sh
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/elasticsearch/scripts/start.sh
            fabric_env: *simple_fabric_env

  manager.nodes.Logstash:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      logstash_rpm_source_url:
        description: Logstash tar.gz Source URL
        type: string
        default: { get_input: logstash_source_url }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/logstash/scripts/create.sh
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/logstash/scripts/start.sh
            fabric_env: *simple_fabric_env

  manager.nodes.InfluxDB:
    derived_from: cloudify.nodes.DBMS
    properties:
      influxdb_rpm_source_url:
        description: InfluxDB RPM Source URL
        type: string
        default: { get_input: influxdb_source_url }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/influxdb/scripts/create.sh
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/influxdb/scripts/start.sh
            fabric_env: *simple_fabric_env

  manager.nodes.Nginx:
    derived_from: cloudify.nodes.WebServer
    properties:
      nginx_rpm_source_url:
        description: Nginx RPM Source URL
        type: string
        default: { get_input: nginx_source_url }
      rest_service_module_source_url:
        description: REST Service repo tar URL for resources
        type: string
        default: { get_input: rest_service_source_url }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/nginx/scripts/create.sh
            fabric_env: *simple_fabric_env
        configure:
          implementation: fabric.fabric_plugin.tasks.run_task
          inputs:
            tasks_file:
              default: components/nginx/scripts/retrieve_agents.py
            task_name:
              default: retrieve
            task_properties:
              default:
                agent_packages: { get_input: agent_package_urls }
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/nginx/scripts/start.sh
            fabric_env: *simple_fabric_env

  manager.nodes.Riemann:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      langohr_jar_source_url:
        description: Langohr JAR Source URL
        type: string
        default: { get_input: langohr_source_url }
      daemonize_rpm_source_url:
        description: Daemonize RPM Source URL
        type: string
        default: { get_input: daemonize_source_url }
      riemann_rpm_source_url:
        description: Riemann RPM Source URL
        type: string
        default: { get_input: riemann_source_url }
      rest_service_module_source_url:
        description: REST Service module Source URL
        type: string
        default: { get_input: rest_service_source_url }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/riemann/scripts/create.sh
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/riemann/scripts/start.sh
            fabric_env: *simple_fabric_env

  manager.nodes.RestService:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      dsl_parser_module_source_url:
        description: DSL Parser module Source URL
        type: string
        default: { get_input: dsl_parser_source_url }
      rest_client_module_source_url:
        description: REST Client module Source URL
        type: string
        default: { get_input: rest_client_source_url }
      securest_module_source_url:
        description: Flask SecuREST module Source URL
        type: string
        default: { get_input: securest_source_url }
      rest_service_module_source_url:
        description: REST Service module Source URL
        type: string
        default: { get_input: rest_service_source_url }
      plugins_common_module_source_url:
        description: Plugins Common module Source URL
        type: string
        default: { get_input: plugins_common_source_url }
      script_plugin_module_source_url:
        description: Script Plugin module Source URL
        type: string
        default: { get_input: script_plugin_source_url }
      diamond_plugin_module_source_url:
        description: Diamond Plugin module Source URL
        type: string
        default: { get_input: diamond_plugin_source_url }
      agent_module_source_url:
        description: Agent module Source URL
        type: string
        default: { get_input: agent_source_url }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/restservice/scripts/create.sh
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/restservice/scripts/start.sh
            fabric_env: *simple_fabric_env

  manager.nodes.ManagementWorker:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      celery_version:
        description: Celery version to use
        type: string
        default: 3.1.17
      rest_client_module_source_url:
        description: REST Client module Source URL
        type: string
        default: { get_input: rest_client_source_url }
      plugins_common_module_source_url:
        description: Plugins Common module Source URL
        type: string
        default: { get_input: plugins_common_source_url }
      script_plugin_module_source_url:
        description: Script Plugin module Source URL
        type: string
        default: { get_input: script_plugin_source_url }
      rest_service_module_source_url:
        description: REST Service module Source URL
        type: string
        default: { get_input: rest_service_source_url }
      diamond_plugin_module_source_url:
        description: Diamond Plugin module Source URL
        type: string
        default: { get_input: diamond_plugin_source_url }
      agent_module_source_url:
        description: Agent module Source URL
        type: string
        default: { get_input: agent_source_url }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/mgmtworker/scripts/create.sh
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/mgmtworker/scripts/start.sh
            fabric_env: *simple_fabric_env

  manager.nodes.AmqpInfluxBroker:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      amqpinflux_module_source_url:
        description: AMQP to InfluxDB Broker Source URL
        type: string
        default: { get_input: amqpinflux_source_url }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/amqpinflux/scripts/create.sh
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/amqpinflux/scripts/start.sh
            fabric_env: *simple_fabric_env

  manager.nodes.WebUI:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      webui_tar_source_url:
        description: Cloudify's WebUI Source URL
        type: string
        default: { get_input: webui_source_url }
      grafana_tar_source_url:
        description: Cloudify's Grafana Source URL
        type: string
        default: { get_input: grafana_source_url }
      nodejs_tar_source_url:
        description: NodeJS tgz Source URL
        type: string
        default: { get_input: nodejs_source_url }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/webui/scripts/create.sh
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/webui/scripts/start.sh
            fabric_env: *simple_fabric_env

  manager.nodes.CLI:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      rest_client_module_source_url:
        description: REST Client module Source URL
        type: string
        default: { get_input: rest_client_source_url }
      dsl_parser_module_source_url:
        description: DSL Parser module Source URL
        type: string
        default: { get_input: dsl_parser_source_url }
      plugins_common_module_source_url:
        description: Plugins Common module Source URL
        type: string
        default: { get_input: plugins_common_source_url }
      script_plugin_module_source_url:
        description: Script Plugin module Source URL
        type: string
        default: { get_input: script_plugin_source_url }
      cli_module_source_url:
        description: Cloudify's CLI module Source URL
        type: string
        default: { get_input: cli_source_url }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/cli/scripts/create.sh
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/cli/scripts/start.sh
            fabric_env: *simple_fabric_env


######################################################################
# most relationship declarations here do not provide any functionality
# aside from to allow to build the dependency graph.
# They can be used to implement a different relationship between
# each of the services.
######################################################################
relationships:

  logstash_to_elasticsearch:
    derived_from: cloudify.relationships.connected_to

  logstash_to_rabbitmq:
    derived_from: cloudify.relationships.connected_to

  restservice_to_elasticsearch:
    derived_from: cloudify.relationships.connected_to

  nginx_to_restservice:
    derived_from: cloudify.relationships.connected_to

  nginx_to_webui:
    derived_from: cloudify.relationships.connected_to

  riemann_to_rabbitmq:
    derived_from: cloudify.relationships.connected_to

  riemann_to_nginx:
    derived_from: cloudify.relationships.connected_to

  mgmtworker_to_rabbitmq:
    derived_from: cloudify.relationships.connected_to

  mgmtworker_to_nginx:
    derived_from: cloudify.relationships.connected_to
    target_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        postconfigure: components/manager/scripts/set_manager_private_ip.sh


  amqpinflux_to_rabbitmq:
    derived_from: cloudify.relationships.connected_to

  amqpinflux_to_influxdb:
    derived_from: cloudify.relationships.connected_to

  restservice_to_rabbitmq:
    derived_from: cloudify.relationships.connected_to

  webui_to_influxdb:
    derived_from: cloudify.relationships.connected_to