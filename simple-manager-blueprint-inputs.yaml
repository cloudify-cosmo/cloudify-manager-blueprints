#############################
# Provider specific Inputs
#############################

# The public IP of the manager to which the CLI will connect.
public_ip: ''

# The manager's private IP address. This is the address which will be used by the
# application hosts to connect to the Manager's fileserver and message broker.
private_ip: ''

# SSH user used to connect to the manager
ssh_user: ''

# SSH port used to connect to the manager
#ssh_port: 22

# SSH key path used to connect to the manager
ssh_key_filename: ''

# This is the user with which the Manager will try to connect to the application hosts.
#agents_user: ubuntu
#resources_prefix: ''

#############################
# Security Settings
#############################
# Enabling SSL limits communication with the server to SSL only.
# The `rest_certificate` and `rest_key` are the locations of the certificate
# and key files to be deployed to the manager.
# If those files do not exists - they will be generated.
#ssl_enabled: false
#rest_certificate: 'resources/ssl/cloudify_external_cert.pem'
#rest_key: 'resources/ssl/cloudify_external_key.pem'

# Username and password of the Cloudify administrator.
# This user will also be included in the simple userstore repostiroty if the
# simple userstore implementation is used.
#admin_username: 'admin'
#admin_password: ''

#insecure_endpoints_disabled: true

#############################
# Bootstrap Validations
#############################
# Validations are performed to check that attributes like disk space and memory
# correspond with some prerequisites and that some resources are available for
# download.
# Setting to `true` will allow to ignore those validations.
#ignore_bootstrap_validations: false

# These allow to override specific validation values
# NOTE: We do not recommend changing these values unless you know exactly
# what you're doing.
#minimum_required_total_physical_memory_in_mb: 3792
#minimum_required_available_disk_space_in_gb: 5

#############################
# Manager Resources Package
#############################
#manager_resources_package: ''

# Providing a checksum file url will allow validating the resources package.
# By default, no validation is performed. Providing a checksum file will use
# the file to validate. Note that not providing a file but changing
# `skip_checksum_validation` to false means we will try to guess the location
# of an md5 checksum file and validate against it.
# You can download our md5 checksum file by appending .md5
# to the `manager_resources_package` url.
#manager_resources_package_checksum_file: ''
#skip_checksum_validation: true

#############################
# Agent Packages
#############################

# The key names must be in the format: distro_release_agent (e.g. ubuntu_trusty_agent)
# as the key is what's used to name the file, which later allows our
# agent installer to identify it for your distro and release automatically.
# Note that the windows agent key name MUST be `cloudify_windows_agent`
#agent_package_urls:
#  ubuntu_trusty_agent: ''
#  ubuntu_precise_agent: ''
#  centos_7x_agent: ''
#  centos_6x_agent: ''
#  redhat_7x_agent: ''
#  redhat_6x_agent: ''
#  cloudify_windows_agent: ''

#############################
# Cloudify Modules
#############################

# Note that you can replace rpm urls with names of packages as long as they're available in your default yum repository.
# That is, as long as they provide the exact same version of that module.

#rest_service_rpm_source_url: ''
#management_worker_rpm_source_url: ''
#amqpinflux_rpm_source_url: ''
#cli_rpm_source_url: ''
#cloudify_resources_url: ''
#stage_source_url: ''
#composer_source_url: ''

# This is a Cloudify specific redistribution of Grafana.
#grafana_source_url: ''

#############################
# External Components
#############################

# Note that you can replace rpm urls with names of packages as long as they're available in your default yum repository.
# That is, as long as they provide the exact same version of that module.

#pip_source_rpm_url: ''
#java_source_url: ''

# RabbitMQ Distribution of Erlang
#erlang_source_url: ''
#rabbitmq_source_url: ''

#logstash_source_url: ''
#nginx_source_url: ''
#influxdb_source_url: ''

#riemann_source_url: ''
# A RabbitMQ Client for Riemann
#langohr_source_url: ''
# Riemann's default daemonizer
#daemonize_source_url: ''

#nodejs_source_url: ''

##############################
# Workflow configuration
##############################

# Sets the number of times a failed task will be retried on recoverable error.
#workflow_task_retries: 60

# Sets the interval between retry attempts in seconds.
#workflow_task_retry_interval: 15

##################################
# Management Workers configuration
##################################

# Sets the logging level to use for the management workers. This affects the logging performed
# by the manager during the execution of management tasks, such as deployment creation
# and deployment deletion.
# NOTE: specifying "debug" will result in considerable amount of logging activity. Consider
# using "info" (or a more restrictive level) for production environments.
#management_worker_log_level: debug

#############################
# RabbitMQ Configuration
#############################
# Sets the username/password to use for clients such as celery
# to connect to the rabbitmq broker.
# It is recommended that you set both the username and password
# to something reasonably secure.
#rabbitmq_username: 'cloudify'
#rabbitmq_password: 'c10udify'

# Allows to define the message-ttl for the different types of queues (in milliseconds).
# https://www.rabbitmq.com/ttl.html
#rabbitmq_events_queue_message_ttl: 60000
#rabbitmq_logs_queue_message_ttl: 60000
#rabbitmq_metrics_queue_message_ttl: 60000

# This will set the queue length limit. Note that while new messages
# will be queued in RabbitMQ, old messages will be deleted once the
# limit is reached!
# Note this is NOT the message byte length!
# https://www.rabbitmq.com/maxlength.html
#rabbitmq_events_queue_length_limit: 1000000
#rabbitmq_logs_queue_length_limit: 1000000
#rabbitmq_metrics_queue_length_limit: 1000000

# RabbitMQ File Descriptors Limit
#rabbitmq_fd_limit: 102400

#############################
# PostgreSQL Configuration
#############################
# You can configure the PostgreSQL database name for cloudify
#postgresql_db_name: 'cloudify_db'
#postgresql_host: 'localhost'

#############################
# LDAP Configuration
#############################
#ldap_server: ''
#ldap_username: ''
#ldap_password: ''
#ldap_domain: ''
#ldap_is_active_directory: true
#ldap_dn_extra: ''

#############################
# InfluxDB Configuration
#############################
# You can configure an external endpoint of an InfluxDB Cluster to use
# instead of the built in one.
# If one is provided, the built in InfluxDB cluster will not run.
# Note that the port is currently not configurable and must remain 8086.
# Also note that the database username and password are hardcoded to root:root.
#influxdb_endpoint_ip: ''

#################################
# Management Worker Configuration
#################################
# Maximum number of worker processes started by the management worker.
#management_worker_max_workers: 100

# Minimum number of worker processes maintained by the management worker.
#management_worker_min_workers: 2

#################################
# REST Configuration
#################################
# valid values: public_ip, private_ip
#rest_host_external_endpoint_type: public_ip

# valid values: public_ip, private_ip
#rest_host_internal_endpoint_type: private_ip

# The number of gunicorn worker processes for handling requests.
# If the default value (0) is set, then min((2 * cpu_count + 1 processes), 12) will be used.
#rest_service_gunicorn_worker_count: 0

# The maximum number of requests a worker will process before restarting.
# If this is set to zero then the automatic worker restarts are disabled.
#rest_service_gunicorn_max_requests: 1000

# Logging level for the REST service. Defaults to 'INFO', as 'DEBUG' may end up
# logging sensitive information.
#rest_service_log_level: INFO

# The size, in MB, that the REST service log file may grow to before it's rotated.
#rest_service_log_file_size: 100

# Number of historical log files to keep when rotating the REST service logs.
#rest_service_log_files_backup_count: 20

###############################
# Images configuration
###############################

# Sets whether the first time the manager's VM is booted from a Cloudify manager image
# its private IP will be propagated to all relevant configuration files.
#set_manager_ip_on_boot: false

#############################
# Offline Resources Upload
#############################
# You can configure a set of resources to upload at bootstrap. These resources
# will reside on the manager and enable offline deployment. `dsl_resources`
# should contain any resource needed in the parsing process (i.e. plugin.yaml files)

#dsl_resources:
#  - {'source_path': 'http://www.getcloudify.org/spec/fabric-plugin/1.5.1/plugin.yaml', 'destination_path': '/spec/fabric-plugin/1.5.1/plugin.yaml'}
#  - {'source_path': 'http://www.getcloudify.org/spec/script-plugin/1.5.1/plugin.yaml', 'destination_path': '/spec/script-plugin/1.5.1/plugin.yaml'}
#  - {'source_path': 'http://www.getcloudify.org/spec/diamond-plugin/1.3.6/plugin.yaml', 'destination_path': '/spec/diamond-plugin/1.3.6/plugin.yaml'}
#  - {'source_path': 'http://www.getcloudify.org/spec/aws-plugin/1.4.10/plugin.yaml', 'destination_path': '/spec/aws-plugin/1.4.10/plugin.yaml'}
#  - {'source_path': 'http://www.getcloudify.org/spec/openstack-plugin/2.0.1/plugin.yaml', 'destination_path': '/spec/openstack-plugin/2.0.1/plugin.yaml'}
#  - {'source_path': 'http://www.getcloudify.org/spec/tosca-vcloud-plugin/1.3.1/plugin.yaml', 'destination_path': '/spec/tosca-vcloud-plugin/1.3.1/plugin.yaml'}
#  - {'source_path': 'http://www.getcloudify.org/spec/vsphere-plugin/2.3.0/plugin.yaml', 'destination_path': '/spec/vsphere-plugin/2.3.0/plugin.yaml'}
#  - {'source_path': 'http://www.getcloudify.org/spec/cloudify/4.2.dev1/types.yaml', 'destination_path': '/spec/cloudify/4.2.dev1/types.yaml'}

###############################
# Import Resolver Configuration
###############################
# An imported URL is prefix-matched against the key in each entry. If a match is found,
# then the URL prefix is replaced with the value of the corresponding entry.
# That allows serving YAML files from within the manager, even when the imported URL
# points to the external network.

#import_resolver_rules:
#  - {'http://www.getcloudify.org/spec': 'file:///opt/manager/resources/spec'}
#  - {'http://cloudify.co/spec': 'file:///opt/manager/resources/spec'}
