######################################################################
# By default, the types are using the Fabric plugin to create
# and start the nodes so that you can choose a machine and run this
# blueprint on it.
######################################################################

node_types:

  cloudify.nodes.ManagerResources:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      manager_resources_package:
        default: { get_input: manager_resources_package }
      manager_resources_package_checksum_file:
        default: { get_input: manager_resources_package_checksum_file }
      skip_checksum_validation:
        default: { get_input: skip_checksum_validation }
      ignore_bootstrap_validations:
        default: { get_input: ignore_bootstrap_validations }
      minimum_required_total_physical_memory_in_mb:
        default: { get_input: minimum_required_total_physical_memory_in_mb }
      minimum_required_available_disk_space_in_gb:
        default: { get_input: minimum_required_available_disk_space_in_gb }
      execute_before_bootstrap:
        default: { get_input: execute_before_bootstrap }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/manager/scripts/validate.py
            hide_output: &hide_output
              default:
                - running
            fabric_env: &simple_fabric_env
              default:
                user: { get_input: ssh_user }
                port: { get_input: ssh_port }
                key_filename: { get_input: ssh_key_filename }
                host_string: { get_attribute: [manager_configuration, public_ip] }
                always_use_pty: true
        configure:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/manager/scripts/create.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        delete:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/manager/scripts/delete.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

  cloudify.nodes.MyCloudifyManager:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      ssh_user:
        default: centos
      ssh_port:
        default: 22
      ssh_key_filename:
        default: ''
      agent_local_key_path:
        default: ''
      agent_remote_key_path:
        default: /root/.ssh/agent_key.pem
      public_ip:
        default: ''
      manager_version:
        default: 4.0.0
      cloudify:
        description: >
          Configuration for Cloudify Manager
        default:
          resources_prefix: ''
          cloudify_agent:
            min_workers: 2
            max_workers: 5
            remote_execution_port: 22
            user: centos
          workflows:
            task_retries: { get_input: workflow_task_retries }
            task_retry_interval: { get_input: workflow_task_retry_interval }
          policy_engine:
            start_timeout: 30
      #########################################################################
      # Setting 'enabled' to true will activate security on the REST service,
      # according to the below configuration. Each request received by the
      # REST service will be authenticated.
      #########################################################################
      security:
        description: >
          Security Configuration for Cloudify Manager
        default:
          #########################################################################
          # These credentials are used by the scripts during bootstrap,
          # upgrade, and rollback.
          #########################################################################
          admin_username:  { get_input: admin_username }
          admin_password:  { get_input: admin_password }

          #########################################################################
          # Enabling SSL limits communication with the server to SSL only.
          # If enabled, the certificate and private key files must be found in
          # resources/ssl.
          # Disabled by default.
          #########################################################################
          ssl:
            enabled: { get_input: ssl_enabled }

      use_existing_on_upgrade:
        description: Use existing manager configuration on upgrade
        type: string
        default: true

  manager.nodes.PythonRuntime:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      install_python_compilers:
        type: boolean
        default: { get_input: install_python_compilers }
      pip_source_rpm_url:
        type: string
        default: { get_input: pip_source_rpm_url }
      use_existing_on_upgrade:
        description: Use existing python configuration
        type: string
        default: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              # Note that this also sets SELinux to Permissive
              # mode until we find a better position for it.
              default: components/python/scripts/create.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/python/scripts/validate.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

  manager.nodes.JavaRuntime:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      java_rpm_source_url:
        description: Java RPM Source URL
        default: { get_input: java_source_url }
      use_existing_on_upgrade:
        description: Use existing java configuration
        type: string
        default: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/java/scripts/create.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/java/scripts/validate.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        delete:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/java/scripts/delete.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

  manager.nodes.Consul:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      consul_package_url:
        default: { get_input: consul_package_url }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/consul/scripts/create.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        delete:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/consul/scripts/delete.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

  manager.nodes.Syncthing:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      syncthing_package_url:
        default: { get_input: syncthing_package_url}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/syncthing/scripts/create.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        delete:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/syncthing/scripts/delete.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

  manager.nodes.RabbitMQ:
    derived_from: cloudify.nodes.MessageBusServer
    properties:
      erlang_rpm_source_url:
        description: Erlang RPM to install.
        type: string
        default: { get_input: erlang_source_url }
      rabbitmq_rpm_source_url:
        description: RabbitMQ RPM Source URL
        type: string
        default: { get_input: rabbitmq_source_url }
      rabbitmq_events_queue_message_ttl:
        type: integer
        default: { get_input: rabbitmq_events_queue_message_ttl }
      rabbitmq_logs_queue_message_ttl:
        type: integer
        default: { get_input: rabbitmq_logs_queue_message_ttl }
      rabbitmq_metrics_queue_message_ttl:
        type: integer
        default: { get_input: rabbitmq_metrics_queue_message_ttl }
      rabbitmq_events_queue_length_limit:
        type: integer
        default: { get_input: rabbitmq_events_queue_length_limit }
      rabbitmq_logs_queue_length_limit:
        type: integer
        default: { get_input: rabbitmq_logs_queue_length_limit }
      rabbitmq_metrics_queue_length_limit:
        type: integer
        default: { get_input: rabbitmq_metrics_queue_length_limit }
      rabbitmq_fd_limit:
        description: RabbitMQ File Descriptors Limit
        type: integer
        default: { get_input: rabbitmq_fd_limit }
      rabbitmq_username:
        description: RabbitMQ username for access to queues.
        type: string
        default: { get_input: rabbitmq_username }
      rabbitmq_password:
        description: RabbitMQ password for access to queues.
        type: string
        default: { get_input: rabbitmq_password }
      use_existing_on_upgrade:
        description: Use existing rabbit configuration
        type: string
        default: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/rabbitmq/scripts/create.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/rabbitmq/scripts/start.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        stop:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/rabbitmq/scripts/stop.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        delete:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/rabbitmq/scripts/delete.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

  manager.nodes.Postgresql:
    derived_from: cloudify.nodes.DBMS
    properties:
      postgresql_db_name:
        description: postgresql default db name
        type: string
        default: { get_input: postgresql_db_name }
      postgresql_host:
        description: postgresql default host
        type: string
        default: { get_input: postgresql_host }
      postgresql_username:
        description: postgresql default username
        type: string
        default: { get_input: postgresql_username }
      postgresql_password:
        description: postgresql default password
        type: string
        default: { get_input: postgresql_password }
      libxslt_rpm_url:
        description: libxslt rpm URL
        type: string
        default: { get_input: libxslt_rpm_url }
      ps_rpm_url:
        description: postgresql95 rpm URL
        type: string
        default: { get_input: postgresql95_rpm_url }
      ps_contrib_rpm_url:
        description: postgresql95 contrib rpm URL
        type: string
        default: { get_input: postgresql95_contrib_rpm_url }
      ps_libs_rpm_url:
        description: postgresql95 libs rpm URL
        type: string
        default: { get_input: postgresql95_libs_rpm_url }
      ps_server_rpm_url:
        description: postgresql95 server rpm URL
        type: string
        default: { get_input: postgresql95_server_rpm_url }
      ps_devel_rpm_url:
        description: postgresql95 devel rpm URL
        type: string
        default: { get_input: postgresql95_devel_rpm_url }
      psycopg2_rpm_url:
        type: string
        default: { get_input: python_psycopg2_rpm_url }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/postgresql/scripts/create.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        configure:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/postgresql/scripts/config.sh
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/postgresql/scripts/start.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        stop:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/postgresql/scripts/stop.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        delete:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/postgresql/scripts/delete.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

  manager.nodes.Logstash:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      logstash_rpm_source_url:
        description: Logstash tar.gz Source URL
        type: string
        default: { get_input: logstash_source_url }
      logstash_filter_json_encode_plugin_url:
        description: logstash-filter-json_encode location
        default: { get_input: logstash_filter_json_encode_plugin_url }
      logstash_output_jdbc_plugin_url:
        description: logstash-output-jdbc-plugin location
        default: { get_input: logstash_output_jdbc_plugin_url }
      postgresql_jdbc_driver_url:
        description: PostgreSQL JDBC driver
        type: string
        default: { get_input: postgresql_jdbc_driver_url }
      use_existing_on_upgrade:
        description: Use existing logstash configuration
        type: string
        default: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/logstash/scripts/create.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        configure:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/logstash/scripts/configure.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/logstash/scripts/start.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        stop:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/logstash/scripts/stop.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        delete:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/logstash/scripts/delete.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

  manager.nodes.InfluxDB:
    derived_from: cloudify.nodes.DBMS
    properties:
      influxdb_rpm_source_url:
        description: InfluxDB RPM Source URL
        type: string
        default: { get_input: influxdb_source_url }
      influxdb_endpoint_ip:
        type: string
        default: { get_input: influxdb_endpoint_ip }
      use_existing_on_upgrade:
        description: Use existing influxdb configuration
        type: string
        default: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/influxdb/scripts/create.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/influxdb/scripts/start.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        stop:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/influxdb/scripts/stop.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        delete:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/influxdb/scripts/delete.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

  manager.nodes.Nginx:
    derived_from: cloudify.nodes.WebServer
    properties:
      nginx_rpm_source_url:
        description: Nginx RPM Source URL
        type: string
        default: { get_input: nginx_source_url }
      rest_service_module_source_url:
        description: REST Service repo tar URL for resources
        type: string
        default: { get_input: rest_service_source_url }
      use_existing_on_upgrade:
        description: Use existing nginx configuration
        type: string
        default: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/nginx/scripts/create.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        configure:
          implementation: fabric.fabric_plugin.tasks.run_task
          inputs:
            tasks_file:
              default: components/nginx/scripts/retrieve_agents.py
            task_name:
              default: retrieve
            task_properties:
              default:
                agent_packages: { get_input: agent_package_urls }
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/nginx/scripts/start.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        stop:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/nginx/scripts/stop.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        delete:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/nginx/scripts/delete.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

  manager.nodes.Riemann:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      langohr_jar_source_url:
        description: Langohr JAR Source URL
        type: string
        default: { get_input: langohr_source_url }
      daemonize_rpm_source_url:
        description: Daemonize RPM Source URL
        type: string
        default: { get_input: daemonize_source_url }
      riemann_rpm_source_url:
        description: Riemann RPM Source URL
        type: string
        default: { get_input: riemann_source_url }
      cloudify_resources_url:
        description: REST Service module Source URL
        type: string
        default: { get_input: cloudify_resources_url }
      rabbitmq_username:
        description: RabbitMQ username for access to queues.
        type: string
        default: { get_input: rabbitmq_username }
      rabbitmq_password:
        description: RabbitMQ password for access to queues.
        type: string
        default: { get_input: rabbitmq_password }
      use_existing_on_upgrade:
        description: Use existing riemann configuration
        type: string
        default: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/riemann/scripts/create.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        configure:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/riemann/scripts/configure.py
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/riemann/scripts/start.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        stop:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/riemann/scripts/stop.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        delete:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/riemann/scripts/delete.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

  manager.nodes.RestService:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      rest_service_rpm_source_url:
        type: string
        default: { get_input: rest_service_rpm_source_url }
      pip_constraints:
        type: string
        default: { get_input: pip_constraints }
      dsl_parser_module_source_url:
        description: DSL Parser module Source URL
        type: string
        default: { get_input: dsl_parser_source_url }
      rest_client_module_source_url:
        description: REST Client module Source URL
        type: string
        default: { get_input: rest_client_source_url }
      rest_service_module_source_url:
        description: REST Service module Source URL
        type: string
        default: { get_input: rest_service_source_url }
      rabbitmq_username:
        description: RabbitMQ username for access to queues.
        type: string
        default: { get_input: rabbitmq_username }
      rabbitmq_password:
        description: RabbitMQ password for access to queues.
        type: string
        default: { get_input: rabbitmq_password }
      plugins_common_module_source_url:
        description: Plugins Common module Source URL
        type: string
        default: { get_input: plugins_common_source_url }
      script_plugin_module_source_url:
        description: Script Plugin module Source URL
        type: string
        default: { get_input: script_plugin_source_url }
      agent_module_source_url:
        description: Agent module Source URL
        type: string
        default: { get_input: agent_source_url }
      plugins:
        description: Enables installing custom plugins on the rest service
        default: {}
      # what we would really like is to have the ref to cloudify security here (in the type) and not in the template
      # defined in each manager blueprint
      # and we also need just the security section...
      cloudify:
        description: Security settings from the manager configuration
        default: {}
      # valid values: public_ip, private_ip
      rest_host_external_endpoint_type:
        description: the type of endpoint used to identify the REST host for external requests
        type: string
        default: { get_input: rest_host_external_endpoint_type }
      # valid values: public_ip, private_ip
      rest_host_internal_endpoint_type:
        description: the type of endpoint used to identify the REST host for internal requests
        type: string
        default: { get_input: rest_host_internal_endpoint_type }
      insecure_endpoints_disabled:
        description: Disables insecure REST endpoints
        type: boolean
        default: { get_input: insecure_endpoints_disabled }
      use_existing_on_upgrade:
        description: Use existing rest service configuration on upgrade
        type: string
        default: true
      gunicorn_worker_count:
        description: |
          The number of worker processes for handling requests.
          If value is set to 0, then min((2 * cpu_count + 1 processes), 12) will be used.
        type: integer
        default: { get_input: rest_service_gunicorn_worker_count }
      gunicorn_max_requests:
        description: |
          The maximum number of requests a worker will process before restarting.
          If this is set to zero then the automatic worker restarts are disabled.
        type: integer
        default: { get_input: rest_service_gunicorn_max_requests }
      log_level:
        description: Logging level for the REST service.
        type: string
        default: { get_input: rest_service_log_level }
      log_file_size:
        description: Size, in MB, of the REST service log file before it's rotated.
        type: integer
        default: { get_input: rest_service_log_file_size }
      log_files_backup_count:
        description: Number of log files to keep when rotating.
        type: integer
        default: { get_input: rest_service_log_files_backup_count }
      min_available_memory_mb:
        description: Minimum available memory for running list query on Manager host in MB.
        type: integer
        default: { get_input: rest_service_min_available_memory_mb }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/restservice/scripts/create.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        configure:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/restservice/scripts/configure.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/restservice/scripts/start.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        stop:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/restservice/scripts/stop.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        delete:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/restservice/scripts/delete.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

  manager.nodes.ManagementWorker:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      management_worker_rpm_source_url:
        description: Management Worker RPM Source URL
        type: string
        default: { get_input: management_worker_rpm_source_url }
      pip_constraints:
        type: string
        default: { get_input: pip_constraints }
      rest_client_module_source_url:
        description: REST Client module Source URL
        type: string
        default: { get_input: rest_client_source_url }
      plugins_common_module_source_url:
        description: Plugins Common module Source URL
        type: string
        default: { get_input: plugins_common_source_url }
      script_plugin_module_source_url:
        description: Script Plugin module Source URL
        type: string
        default: { get_input: script_plugin_source_url }
      rest_service_module_source_url:
        description: REST Service module Source URL
        type: string
        default: { get_input: rest_service_source_url }
      agent_module_source_url:
        description: Agent module Source URL
        type: string
        default: { get_input: agent_source_url }
      rabbitmq_username:
        description: RabbitMQ username for access to queues.
        type: string
        default: { get_input: rabbitmq_username }
      rabbitmq_password:
        description: RabbitMQ password for access to queues.
        type: string
        default: { get_input: rabbitmq_password }
      log_level:
        description: Logging level for Celery worker.
        type: string
        default: { get_input: management_worker_log_level }
      max_workers:
        description: Max number of celery workers.
        type: integer
        default: { get_input: management_worker_max_workers }
      min_workers:
        description: Min number of celery workers.
        type: integer
        default: { get_input: management_worker_min_workers }
      gate_keeper_bucket_size:
        description: >
          Maximum number of concurrent operations/workflows for any deployment. The limit is for concurrent
          operations and concurrent workflows, separately. It cannot be bigger than the management worker
          max workers property, as that property sets the global max number of running processes.
        type: integer
        default: { get_property: [manager_configuration, cloudify, cloudify_agent, max_workers] }
      use_existing_on_upgrade:
        description: Use existing mgmt worker configuration
        type: string
        default: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/mgmtworker/scripts/create.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        configure:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/mgmtworker/scripts/configure.py
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/mgmtworker/scripts/start.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        stop:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/mgmtworker/scripts/stop.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        delete:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/mgmtworker/scripts/delete.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

  manager.nodes.AmqpInfluxBroker:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      amqpinflux_rpm_source_url:
        description: AMQP to InfluxDB Broker RPM Source URL
        type: string
        default: { get_input: amqpinflux_rpm_source_url }
      amqpinflux_module_source_url:
        description: AMQP to InfluxDB Broker Source URL
        type: string
        default: { get_input: amqpinflux_source_url }
      rabbitmq_username:
        description: RabbitMQ username for access to queues.
        type: string
        default: { get_input: rabbitmq_username }
      rabbitmq_password:
        description: RabbitMQ password for access to queues.
        type: string
        default: { get_input: rabbitmq_password }
      use_existing_on_upgrade:
        description: Use existing amqp influx configuration
        type: string
        default: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/amqpinflux/scripts/create.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
            INFLUXDB_ENDPOINT_IP:
              default: { get_attribute: [influxdb, influxdb_endpoint_ip] }
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/amqpinflux/scripts/start.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        stop:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/amqpinflux/scripts/stop.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        delete:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/amqpinflux/scripts/delete.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

  manager.nodes.ManagerIPSetter:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      admin_username:
        default: { get_input: admin_username }
      admin_password:
        default: { get_input: admin_password }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/manager-ip-setter/scripts/create.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
            set_manager_ip_on_boot:
              default: { get_input: set_manager_ip_on_boot }
        delete:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/manager-ip-setter/scripts/delete.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

  manager.nodes.Stage:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      telecom_edition:
        description: Use Telecom Edition?
        type: boolean
        default: { get_input: telecom_edition }
      stage_tar_source_url:
        description: Cloudify Stage Source URL
        type: string
        default: { get_input: stage_source_url }
      nodejs_tar_source_url:
        description: NodeJS tgz Source URL
        type: string
        default: { get_input: nodejs_source_url }
      use_existing_on_upgrade:
        description: Use existing stage configuration
        type: string
        default: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/stage/scripts/create.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
            INFLUXDB_ENDPOINT_IP:
              default: { get_attribute: [influxdb, influxdb_endpoint_ip] }
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/stage/scripts/start.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        stop:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/stage/scripts/stop.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        delete:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/stage/scripts/delete.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

  manager.nodes.Composer:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      composer_tar_source_url:
        description: Cloudify Composer Source URL
        type: string
        default: { get_input: composer_source_url }
      use_existing_on_upgrade:
        description: Use existing composer configuration
        type: string
        default: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/composer/scripts/create.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/composer/scripts/start.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        stop:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/composer/scripts/stop.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        delete:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/composer/scripts/delete.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

  manager.nodes.CLI:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      rest_client_module_source_url:
        description: REST Client module Source URL
        type: string
        default: { get_input: rest_client_source_url }
      dsl_parser_module_source_url:
        description: DSL Parser module Source URL
        type: string
        default: { get_input: dsl_parser_source_url }
      plugins_common_module_source_url:
        description: Plugins Common module Source URL
        type: string
        default: { get_input: plugins_common_source_url }
      script_plugin_module_source_url:
        description: Script Plugin module Source URL
        type: string
        default: { get_input: script_plugin_source_url }
      cli_module_source_url:
        description: Cloudify's CLI module Source URL
        type: string
        default: { get_input: cli_source_url }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/cli/scripts/create.sh
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/cli/scripts/start.sh
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

  manager.nodes.Sanity:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      sanity_app_source_url:
        description: Sanity app Source URL
        type: string
        default: { get_input: sanity_app_source_url }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_task
          inputs:
            tasks_file:
              default: components/sanity/scripts/create.py
            task_name:
              default: upload_keypair
            task_properties:
              default:
                local_key_path: { get_input: ssh_key_filename }
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/sanity/scripts/start.py
            ssh_user:
              default: { get_input: ssh_user }
            manager_ip:
              default: { get_attribute: [manager_host, public_ip] }
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

######################################################################
# most relationship declarations here do not provide any functionality
# aside from to allow to build the dependency graph.
# They can be used to implement a different relationship between
# each of the services.
######################################################################
relationships:

  logstash_to_rabbitmq:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/logstash/scripts/preconfigure_rabbitmq_properties.py
            fabric_env: *simple_fabric_env

  logstash_to_postgresql:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/logstash/scripts/preconfigure_postgresql_properties.py
            fabric_env: *simple_fabric_env

  restservice_to_postgresql:
    derived_from: cloudify.relationships.connected_to

  nginx_to_stage:
    derived_from: cloudify.relationships.connected_to

  riemann_to_rabbitmq:
    derived_from: cloudify.relationships.connected_to

  riemann_to_nginx:
    derived_from: cloudify.relationships.connected_to

  riemann_to_mgmtworker:
    derived_from: cloudify.relationships.depends_on

  mgmtworker_to_rabbitmq:
    derived_from: cloudify.relationships.connected_to

  mgmtworker_to_manager_configuration:
    derived_from: cloudify.relationships.depends_on
    target_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/mgmtworker/scripts/preconfigure.py
            fabric_env: *simple_fabric_env

  riemann_to_manager_configuration:
    derived_from: cloudify.relationships.depends_on
    target_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/riemann/scripts/preconfigure.py
            fabric_env: *simple_fabric_env

  nginx_to_manager_configuration:
    derived_from: cloudify.relationships.depends_on
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/nginx/scripts/preconfigure.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

  rest_to_manager_configuration:
    derived_from: cloudify.relationships.depends_on
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure:
          implementation: fabric.fabric_plugin.tasks.run_task
          inputs:
            tasks_file:
              default: components/restservice/scripts/install_plugins.py
            task_name:
              default: install_plugins
            hide_output: *hide_output
            fabric_env: *simple_fabric_env
    target_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: components/restservice/scripts/preconfigure.py
            hide_output: *hide_output
            fabric_env: *simple_fabric_env

  sanity_to_mgr_config:
    derived_from: cloudify.relationships.depends_on
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        postconfigure:
         implementation: components/sanity/scripts/postconfigure.py

  amqpinflux_to_rabbitmq:
    derived_from: cloudify.relationships.connected_to

  amqpinflux_to_influxdb:
    derived_from: cloudify.relationships.connected_to

  restservice_to_rabbitmq:
    derived_from: cloudify.relationships.connected_to

  stage_to_influxdb:
    derived_from: cloudify.relationships.connected_to

  stage_to_restservice:
    derived_from: cloudify.relationships.connected_to

  composer_to_restservice:
    derived_from: cloudify.relationships.connected_to

  mgmtworker_to_postgres:
    derived_from: cloudify.relationships.depends_on

  mgmtworker_to_restservice:
    derived_from: cloudify.relationships.depends_on
